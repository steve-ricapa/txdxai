spring.application.name=txdxai

config basee de datos
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD}


    # Clave de API de OpenAI (obligatorio)
langchain4j.open-ai.chat-model.api-key=${OPENAI_API_KEY}

    # Nombre del modelo a usar (por ejemplo, GPT-4)
langchain4j.open-ai.chat-model.model-name=gpt-4

    # Temperatura de muestreo (opcional; default suele ser 1.0)
    langchain4j.open-ai.chat-model.temperature=0.7

# Maximo de tokens por respuesta (si el _starter_ lo soporta)
    langchain4j.open-ai.chat-model.max-tokens=1024


# Habilita loggeo de request/response al LLM
langchain4j.open-ai.chat-model.log-requests=true
langchain4j.open-ai.chat-model.log-responses=true
logging.level.dev.langchain4j.memory=DEBUG

# Nivel de log para LangChain4j (DEBUG para desarrollo)
logging.level.dev.langchain4j=DEBUG


stripe.secret-key=sk_test_51RtWRWHwQIAHovLfppPYxCobe9N9X7yhJidHdTq2spOyudTmgHw9BuEhDwxiCCBBakOdnBERspJ9yHpXVr1NL40D005kqxFrwe
stripe.public-key=pk_test_51RtWRWHwQIAHovLfXjF3YCubVuI5LL7tvntLmwTy5AkRTWY5jb5GbKzVdTcBLiSymbk6vtSkAdSnjhvk3d6revlY00gpxKPQR0




# Configuracion de la codificacion de correo
spring.mail.default-encoding=UTF-8

#config de correo
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#Config de jwt
jwt.secret=${JWT_SECRET}



# Configuracion de AWS S3

#aws.s3.bucket-name=${AWS_S3_BUCKET}
#aws.s3.region=${AWS_REGION}
#aws.access-key-id=${AWS_ACCESS_KEY_ID}
#aws.secret-access-key=${AWS_SECRET_ACCESS_KEY}
#aws.session-token=${AWS_SESSION_TOKEN}

## Clave de API para WHEREBY (este es un ejemplo, de como implementar apis externas, no se usa)
#WHEREBY_API_KEY=${WHEREBY_API_KEY}